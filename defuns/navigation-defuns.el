(defun oww-down (arg)
  (interactive "p")
  (if (bolp)
      (progn
        (forward-paragraph arg)
        (forward-line 1))
    (line-move arg)))

(defun oww-up (arg)
  (interactive "p")
  (if (bolp)
      (progn
        (forward-line -1)
        (backward-paragraph arg)
        (forward-line 1))
    (line-move (- arg))))

;; allows you to switch back and forth between frames
(defun frame-bck()
  (interactive)
  (other-window -1)
)

(defun goto-local-line (arg)
  "Type the last two digits of the line number to jump to."
  (interactive (list (read-number "Goto Line: ")) )
  (if (> arg 99)
      (goto-line arg)
    (setq saved-truncate-lines-val truncate-lines)
    (move-to-window-line 0)
    (setq truncate-lines 't)
    (let ((window-start-line-no (line-number-at-pos)))
      (if (< window-start-line-no 100)
          (let ((window-start-num (% (line-number-at-pos) 100)))
            (if (>= arg window-start-num)
                (move-to-window-line (- arg window-start-line-no))
              (move-to-window-line (- (+ arg 100) window-start-num)))
            )
        (let ((window-start-num (% (line-number-at-pos) 100)))
          (if (>= arg window-start-num)
              (move-to-window-line (- arg window-start-num))
            (move-to-window-line (- (+ arg 100) window-start-num)))
          )
        )
      )
    (setq truncate-lines saved-truncate-lines-val)
    )
  )

(defun other-window-or-frame ()
  "If the current frame has two windows, switch to the other window, otherwise, switch to another frame."
  (interactive)
  (if (equal (length (window-list)) 2)
      (other-window 1)
      (other-frame 1)
      )
)
